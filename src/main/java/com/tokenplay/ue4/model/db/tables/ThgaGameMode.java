/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.GameModeRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4GameMode extends TableImpl<GameModeRecord> {

    private static final long serialVersionUID = -1678131776;

    /**
     * The reference instance of <code>tue4_game_mode</code>
     */
    public static final Tue4GameMode GAME_MODE = new Tue4GameMode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GameModeRecord> getRecordType() {
        return GameModeRecord.class;
    }

    /**
     * The column <code>tue4_game_mode.gam_id</code>.
     */
    public final TableField<GameModeRecord, String> GAM_ID = createField("gam_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_game_mode.gam_asset_name</code>.
     */
    public final TableField<GameModeRecord, String> GAM_ASSET_NAME = createField("gam_asset_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>tue4_game_mode</code> table reference
     */
    public Tue4GameMode() {
        this(DSL.name("tue4_game_mode"), null);
    }

    /**
     * Create an aliased <code>tue4_game_mode</code> table reference
     */
    public Tue4GameMode(String alias) {
        this(DSL.name(alias), GAME_MODE);
    }

    /**
     * Create an aliased <code>tue4_game_mode</code> table reference
     */
    public Tue4GameMode(Name alias) {
        this(alias, GAME_MODE);
    }

    private Tue4GameMode(Name alias, Table<GameModeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4GameMode(Name alias, Table<GameModeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GAME_MODE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GameModeRecord> getPrimaryKey() {
        return Keys.GAME_MODE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GameModeRecord>> getKeys() {
        return Arrays.<UniqueKey<GameModeRecord>>asList(Keys.GAME_MODE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4GameMode as(String alias) {
        return new Tue4GameMode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4GameMode as(Name alias) {
        return new Tue4GameMode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4GameMode rename(String name) {
        return new Tue4GameMode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4GameMode rename(Name name) {
        return new Tue4GameMode(name, null);
    }
}
