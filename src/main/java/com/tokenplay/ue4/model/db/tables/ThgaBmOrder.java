/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.BmOrderRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4BmOrder extends TableImpl<BmOrderRecord> {

    private static final long serialVersionUID = 1984946224;

    /**
     * The reference instance of <code>tue4_bm_order</code>
     */
    public static final Tue4BmOrder BM_ORDER = new Tue4BmOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BmOrderRecord> getRecordType() {
        return BmOrderRecord.class;
    }

    /**
     * The column <code>tue4_bm_order.bm_order_id</code>.
     */
    public final TableField<BmOrderRecord, String> BM_ORDER_ID = createField("bm_order_id", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this,
        "");

    /**
     * The column <code>tue4_bm_order.pil_id</code>.
     */
    public final TableField<BmOrderRecord, String> PIL_ID = createField("pil_id", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>tue4_bm_order.corp_id</code>.
     */
    public final TableField<BmOrderRecord, String> CORP_ID = createField("corp_id", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>tue4_bm_order.bm_transaction_id</code>.
     */
    public final TableField<BmOrderRecord, String> BM_TRANSACTION_ID = createField("bm_transaction_id",
        org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>tue4_bm_order.bm_equipment_id</code>.
     */
    public final TableField<BmOrderRecord, String> BM_EQUIPMENT_ID = createField("bm_equipment_id", org.jooq.impl.SQLDataType.CHAR(32)
        .nullable(false), this, "");

    /**
     * The column <code>tue4_bm_order.created_at</code>.
     */
    public final TableField<BmOrderRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false),
        this, "");

    /**
     * The column <code>tue4_bm_order.updated_at</code>.
     */
    public final TableField<BmOrderRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false),
        this, "");

    /**
     * Create a <code>tue4_bm_order</code> table reference
     */
    public Tue4BmOrder() {
        this(DSL.name("tue4_bm_order"), null);
    }

    /**
     * Create an aliased <code>tue4_bm_order</code> table reference
     */
    public Tue4BmOrder(String alias) {
        this(DSL.name(alias), BM_ORDER);
    }

    /**
     * Create an aliased <code>tue4_bm_order</code> table reference
     */
    public Tue4BmOrder(Name alias) {
        this(alias, BM_ORDER);
    }

    private Tue4BmOrder(Name alias, Table<BmOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4BmOrder(Name alias, Table<BmOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BM_ORDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BmOrderRecord> getPrimaryKey() {
        return Keys.BM_ORDER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BmOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<BmOrderRecord>>asList(Keys.BM_ORDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4BmOrder as(String alias) {
        return new Tue4BmOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4BmOrder as(Name alias) {
        return new Tue4BmOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4BmOrder rename(String name) {
        return new Tue4BmOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4BmOrder rename(Name name) {
        return new Tue4BmOrder(name, null);
    }
}
