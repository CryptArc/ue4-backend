/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.ServerAuthorisedRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4ServerAuthorised extends TableImpl<ServerAuthorisedRecord> {

    private static final long serialVersionUID = -162238599;

    /**
     * The reference instance of <code>tue4_server_authorised</code>
     */
    public static final Tue4ServerAuthorised SERVER_AUTHORISED = new Tue4ServerAuthorised();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServerAuthorisedRecord> getRecordType() {
        return ServerAuthorisedRecord.class;
    }

    /**
     * The column <code>tue4_server_authorised.sau_srv_id</code>.
     */
    public final TableField<ServerAuthorisedRecord, String> SAU_SRV_ID = createField("sau_srv_id", org.jooq.impl.SQLDataType.CLOB.nullable(false),
        this, "");

    /**
     * The column <code>tue4_server_authorised.sau_pil_id</code>.
     */
    public final TableField<ServerAuthorisedRecord, String> SAU_PIL_ID = createField("sau_pil_id", org.jooq.impl.SQLDataType.CLOB.nullable(false),
        this, "");

    /**
     * Create a <code>tue4_server_authorised</code> table reference
     */
    public Tue4ServerAuthorised() {
        this(DSL.name("tue4_server_authorised"), null);
    }

    /**
     * Create an aliased <code>tue4_server_authorised</code> table reference
     */
    public Tue4ServerAuthorised(String alias) {
        this(DSL.name(alias), SERVER_AUTHORISED);
    }

    /**
     * Create an aliased <code>tue4_server_authorised</code> table reference
     */
    public Tue4ServerAuthorised(Name alias) {
        this(alias, SERVER_AUTHORISED);
    }

    private Tue4ServerAuthorised(Name alias, Table<ServerAuthorisedRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4ServerAuthorised(Name alias, Table<ServerAuthorisedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SERVER_AUTHORISED_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServerAuthorisedRecord> getPrimaryKey() {
        return Keys.SERVER_AUTHORISED_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServerAuthorisedRecord>> getKeys() {
        return Arrays.<UniqueKey<ServerAuthorisedRecord>>asList(Keys.SERVER_AUTHORISED_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServerAuthorisedRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServerAuthorisedRecord, ?>>asList(Keys.SERVER_AUTHORISED__Tue4_SERVER_AUTHORISED_SAU_SRV_ID_FKEY,
            Keys.SERVER_AUTHORISED__Tue4_SERVER_AUTHORISED_SAU_PIL_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4ServerAuthorised as(String alias) {
        return new Tue4ServerAuthorised(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4ServerAuthorised as(Name alias) {
        return new Tue4ServerAuthorised(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4ServerAuthorised rename(String name) {
        return new Tue4ServerAuthorised(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4ServerAuthorised rename(Name name) {
        return new Tue4ServerAuthorised(name, null);
    }
}
