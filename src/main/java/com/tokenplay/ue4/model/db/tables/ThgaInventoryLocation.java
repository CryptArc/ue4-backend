/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.InventoryLocationRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4InventoryLocation extends TableImpl<InventoryLocationRecord> {

    private static final long serialVersionUID = -987626847;

    /**
     * The reference instance of <code>tue4_inventory_location</code>
     */
    public static final Tue4InventoryLocation INVENTORY_LOCATION = new Tue4InventoryLocation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InventoryLocationRecord> getRecordType() {
        return InventoryLocationRecord.class;
    }

    /**
     * The column <code>tue4_inventory_location.inl_id</code>.
     */
    public final TableField<InventoryLocationRecord, String> INL_ID = createField("inl_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_inventory_location.inl_name</code>.
     */
    public final TableField<InventoryLocationRecord, String> INL_NAME = createField("inl_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this,
        "");

    /**
     * The column <code>tue4_inventory_location.inl_size</code>.
     */
    public final TableField<InventoryLocationRecord, Long> INL_SIZE = createField("inl_size", org.jooq.impl.SQLDataType.BIGINT.nullable(false)
        .defaultValue(org.jooq.impl.DSL.field("(1)::bigint", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>tue4_inventory_location.inl_restricted_type</code>.
     */
    public final TableField<InventoryLocationRecord, String> INL_RESTRICTED_TYPE = createField("inl_restricted_type", org.jooq.impl.SQLDataType.CLOB,
        this, "");

    /**
     * The column <code>tue4_inventory_location.inl_locationtype</code>.
     */
    public final TableField<InventoryLocationRecord, String> INL_LOCATIONTYPE = createField("inl_locationtype", org.jooq.impl.SQLDataType.CLOB, this,
        "");

    /**
     * Create a <code>tue4_inventory_location</code> table reference
     */
    public Tue4InventoryLocation() {
        this(DSL.name("tue4_inventory_location"), null);
    }

    /**
     * Create an aliased <code>tue4_inventory_location</code> table reference
     */
    public Tue4InventoryLocation(String alias) {
        this(DSL.name(alias), INVENTORY_LOCATION);
    }

    /**
     * Create an aliased <code>tue4_inventory_location</code> table reference
     */
    public Tue4InventoryLocation(Name alias) {
        this(alias, INVENTORY_LOCATION);
    }

    private Tue4InventoryLocation(Name alias, Table<InventoryLocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4InventoryLocation(Name alias, Table<InventoryLocationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INVENTORY_LOCATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InventoryLocationRecord> getPrimaryKey() {
        return Keys.INVENTORY_LOCATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InventoryLocationRecord>> getKeys() {
        return Arrays.<UniqueKey<InventoryLocationRecord>>asList(Keys.INVENTORY_LOCATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4InventoryLocation as(String alias) {
        return new Tue4InventoryLocation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4InventoryLocation as(Name alias) {
        return new Tue4InventoryLocation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4InventoryLocation rename(String name) {
        return new Tue4InventoryLocation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4InventoryLocation rename(Name name) {
        return new Tue4InventoryLocation(name, null);
    }
}
