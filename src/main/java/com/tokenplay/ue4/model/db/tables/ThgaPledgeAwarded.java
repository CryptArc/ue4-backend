/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.PledgeAwardedRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4PledgeAwarded extends TableImpl<PledgeAwardedRecord> {

    private static final long serialVersionUID = 1288255451;

    /**
     * The reference instance of <code>tue4_pledge_awarded</code>
     */
    public static final Tue4PledgeAwarded PLEDGE_AWARDED = new Tue4PledgeAwarded();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PledgeAwardedRecord> getRecordType() {
        return PledgeAwardedRecord.class;
    }

    /**
     * The column <code>tue4_pledge_awarded.pla_level_id</code>.
     */
    public final TableField<PledgeAwardedRecord, Long> PLA_LEVEL_ID = createField("pla_level_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false),
        this, "");

    /**
     * The column <code>tue4_pledge_awarded.pla_awarded_leq_id</code>.
     */
    public final TableField<PledgeAwardedRecord, String> PLA_AWARDED_LEQ_ID = createField("pla_awarded_leq_id", org.jooq.impl.SQLDataType.CHAR(32)
        .nullable(false), this, "");

    /**
     * The column <code>tue4_pledge_awarded.pla_quantity</code>.
     */
    public final TableField<PledgeAwardedRecord, BigDecimal> PLA_QUANTITY = createField("pla_quantity", org.jooq.impl.SQLDataType.NUMERIC(15, 5)
        .nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>tue4_pledge_awarded.pla_created_at</code>.
     */
    public final TableField<PledgeAwardedRecord, OffsetDateTime> PLA_CREATED_AT = createField(
        "pla_created_at",
        org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(
            org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>tue4_pledge_awarded</code> table reference
     */
    public Tue4PledgeAwarded() {
        this(DSL.name("tue4_pledge_awarded"), null);
    }

    /**
     * Create an aliased <code>tue4_pledge_awarded</code> table reference
     */
    public Tue4PledgeAwarded(String alias) {
        this(DSL.name(alias), PLEDGE_AWARDED);
    }

    /**
     * Create an aliased <code>tue4_pledge_awarded</code> table reference
     */
    public Tue4PledgeAwarded(Name alias) {
        this(alias, PLEDGE_AWARDED);
    }

    private Tue4PledgeAwarded(Name alias, Table<PledgeAwardedRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4PledgeAwarded(Name alias, Table<PledgeAwardedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PLEDGE_AWARDED_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PledgeAwardedRecord> getPrimaryKey() {
        return Keys.PLEDGE_AWARDED_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PledgeAwardedRecord>> getKeys() {
        return Arrays.<UniqueKey<PledgeAwardedRecord>>asList(Keys.PLEDGE_AWARDED_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PledgeAwardedRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PledgeAwardedRecord, ?>>asList(Keys.PLEDGE_AWARDED__Tue4_PLEDGE_AWARDED_PLA_AWARDED_LEQ_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4PledgeAwarded as(String alias) {
        return new Tue4PledgeAwarded(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4PledgeAwarded as(Name alias) {
        return new Tue4PledgeAwarded(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4PledgeAwarded rename(String name) {
        return new Tue4PledgeAwarded(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4PledgeAwarded rename(Name name) {
        return new Tue4PledgeAwarded(name, null);
    }
}
