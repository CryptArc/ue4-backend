/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import com.tokenplay.ue4.model.db.tables.Tue4ScoreConfig;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class ScoreConfigRecord extends UpdatableRecordImpl<ScoreConfigRecord> implements
    Record6<String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = -2034403815;

    /**
     * Setter for <code>tue4_score_config.sco_id</code>.
     */
    public void setScoId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tue4_score_config.sco_id</code>.
     */
    @NotNull
    public String getScoId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tue4_score_config.sco_name</code>.
     */
    public void setScoName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tue4_score_config.sco_name</code>.
     */
    @NotNull
    public String getScoName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tue4_score_config.sco_minimum_factor</code>.
     */
    public void setScoMinimumFactor(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>tue4_score_config.sco_minimum_factor</code>.
     */
    @NotNull
    public BigDecimal getScoMinimumFactor() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>tue4_score_config.sco_maximum_factor</code>.
     */
    public void setScoMaximumFactor(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>tue4_score_config.sco_maximum_factor</code>.
     */
    @NotNull
    public BigDecimal getScoMaximumFactor() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>tue4_score_config.sco_neutral_matches</code>.
     */
    public void setScoNeutralMatches(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>tue4_score_config.sco_neutral_matches</code>.
     */
    @NotNull
    public BigDecimal getScoNeutralMatches() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>tue4_score_config.sco_months_to_consider</code>.
     */
    public void setScoMonthsToConsider(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>tue4_score_config.sco_months_to_consider</code>.
     */
    @NotNull
    public BigDecimal getScoMonthsToConsider() {
        return (BigDecimal) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tue4ScoreConfig.SCORE_CONFIG.SCO_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tue4ScoreConfig.SCORE_CONFIG.SCO_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Tue4ScoreConfig.SCORE_CONFIG.SCO_MINIMUM_FACTOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Tue4ScoreConfig.SCORE_CONFIG.SCO_MAXIMUM_FACTOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Tue4ScoreConfig.SCORE_CONFIG.SCO_NEUTRAL_MATCHES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return Tue4ScoreConfig.SCORE_CONFIG.SCO_MONTHS_TO_CONSIDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getScoId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getScoName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getScoMinimumFactor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getScoMaximumFactor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getScoNeutralMatches();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component6() {
        return getScoMonthsToConsider();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getScoId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getScoName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getScoMinimumFactor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getScoMaximumFactor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getScoNeutralMatches();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getScoMonthsToConsider();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreConfigRecord value1(String value) {
        setScoId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreConfigRecord value2(String value) {
        setScoName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreConfigRecord value3(BigDecimal value) {
        setScoMinimumFactor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreConfigRecord value4(BigDecimal value) {
        setScoMaximumFactor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreConfigRecord value5(BigDecimal value) {
        setScoNeutralMatches(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreConfigRecord value6(BigDecimal value) {
        setScoMonthsToConsider(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreConfigRecord values(String value1, String value2, BigDecimal value3, BigDecimal value4, BigDecimal value5, BigDecimal value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScoreConfigRecord
     */
    public ScoreConfigRecord() {
        super(Tue4ScoreConfig.SCORE_CONFIG);
    }

    /**
     * Create a detached, initialised ScoreConfigRecord
     */
    public ScoreConfigRecord(String id, String name, BigDecimal minimumFactor, BigDecimal maximumFactor, BigDecimal neutralMatches,
        BigDecimal monthsToConsider) {
        super(Tue4ScoreConfig.SCORE_CONFIG);

        set(0, id);
        set(1, name);
        set(2, minimumFactor);
        set(3, maximumFactor);
        set(4, neutralMatches);
        set(5, monthsToConsider);
    }
}
