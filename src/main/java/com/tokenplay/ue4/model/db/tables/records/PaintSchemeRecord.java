/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import com.tokenplay.ue4.model.db.tables.Tue4PaintScheme;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class PaintSchemeRecord extends UpdatableRecordImpl<PaintSchemeRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 656642172;

    /**
     * Setter for <code>tue4_paint_scheme.pis_id</code>.
     */
    public void setPisId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tue4_paint_scheme.pis_id</code>.
     */
    @NotNull
    public String getPisId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tue4_paint_scheme.pis_pil_id</code>.
     */
    public void setPisPilId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tue4_paint_scheme.pis_pil_id</code>.
     */
    @NotNull
    public String getPisPilId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tue4_paint_scheme.pis_name</code>.
     */
    public void setPisName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tue4_paint_scheme.pis_name</code>.
     */
    @NotNull
    public String getPisName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tue4_paint_scheme.pis_scheme</code>.
     */
    public void setPisScheme(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>tue4_paint_scheme.pis_scheme</code>.
     */
    @NotNull
    public String getPisScheme() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tue4PaintScheme.PAINT_SCHEME.PIS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tue4PaintScheme.PAINT_SCHEME.PIS_PIL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Tue4PaintScheme.PAINT_SCHEME.PIS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Tue4PaintScheme.PAINT_SCHEME.PIS_SCHEME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPisPilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPisName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPisScheme();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPisPilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPisName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPisScheme();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaintSchemeRecord value1(String value) {
        setPisId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaintSchemeRecord value2(String value) {
        setPisPilId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaintSchemeRecord value3(String value) {
        setPisName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaintSchemeRecord value4(String value) {
        setPisScheme(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaintSchemeRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaintSchemeRecord
     */
    public PaintSchemeRecord() {
        super(Tue4PaintScheme.PAINT_SCHEME);
    }

    /**
     * Create a detached, initialised PaintSchemeRecord
     */
    public PaintSchemeRecord(String id, String pilId, String name, String scheme) {
        super(Tue4PaintScheme.PAINT_SCHEME);

        set(0, id);
        set(1, pilId);
        set(2, name);
        set(3, scheme);
    }
}
