/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import com.tokenplay.ue4.model.db.tables.Tue4BmAccountmaster;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class BmAccountmasterRecord extends UpdatableRecordImpl<BmAccountmasterRecord> implements
    Record7<String, String, String, Double, Double, Timestamp, Timestamp> {

    private static final long serialVersionUID = 35638917;

    /**
     * Setter for <code>tue4_bm_accountmaster.bm_accountmaster_id</code>.
     */
    public void setBmAccountmasterId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tue4_bm_accountmaster.bm_accountmaster_id</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getBmAccountmasterId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tue4_bm_accountmaster.bm_accounttype</code>.
     */
    public void setBmAccounttype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tue4_bm_accountmaster.bm_accounttype</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getBmAccounttype() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tue4_bm_accountmaster.bm_prefix</code>.
     */
    public void setBmPrefix(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tue4_bm_accountmaster.bm_prefix</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getBmPrefix() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tue4_bm_accountmaster.bm_minbalance</code>.
     */
    public void setBmMinbalance(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>tue4_bm_accountmaster.bm_minbalance</code>.
     */
    @NotNull
    public Double getBmMinbalance() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>tue4_bm_accountmaster.bm_interest</code>.
     */
    public void setBmInterest(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>tue4_bm_accountmaster.bm_interest</code>.
     */
    @NotNull
    public Double getBmInterest() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>tue4_bm_accountmaster.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>tue4_bm_accountmaster.created_at</code>.
     */
    @NotNull
    public Timestamp getCreatedAt() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>tue4_bm_accountmaster.updated_at</code>.
     */
    public void setUpdatedAt(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>tue4_bm_accountmaster.updated_at</code>.
     */
    @NotNull
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, Double, Double, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, Double, Double, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tue4BmAccountmaster.BM_ACCOUNTMASTER.BM_ACCOUNTMASTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tue4BmAccountmaster.BM_ACCOUNTMASTER.BM_ACCOUNTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Tue4BmAccountmaster.BM_ACCOUNTMASTER.BM_PREFIX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Tue4BmAccountmaster.BM_ACCOUNTMASTER.BM_MINBALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Tue4BmAccountmaster.BM_ACCOUNTMASTER.BM_INTEREST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Tue4BmAccountmaster.BM_ACCOUNTMASTER.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Tue4BmAccountmaster.BM_ACCOUNTMASTER.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getBmAccountmasterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getBmAccounttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getBmPrefix();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getBmMinbalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getBmInterest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getBmAccountmasterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBmAccounttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBmPrefix();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getBmMinbalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getBmInterest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord value1(String value) {
        setBmAccountmasterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord value2(String value) {
        setBmAccounttype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord value3(String value) {
        setBmPrefix(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord value4(Double value) {
        setBmMinbalance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord value5(Double value) {
        setBmInterest(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord value6(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord value7(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BmAccountmasterRecord values(String value1, String value2, String value3, Double value4, Double value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BmAccountmasterRecord
     */
    public BmAccountmasterRecord() {
        super(Tue4BmAccountmaster.BM_ACCOUNTMASTER);
    }

    /**
     * Create a detached, initialised BmAccountmasterRecord
     */
    public BmAccountmasterRecord(String bmAccountmasterId, String bmAccounttype, String bmPrefix, Double bmMinbalance, Double bmInterest,
        Timestamp createdAt, Timestamp updatedAt) {
        super(Tue4BmAccountmaster.BM_ACCOUNTMASTER);

        set(0, bmAccountmasterId);
        set(1, bmAccounttype);
        set(2, bmPrefix);
        set(3, bmMinbalance);
        set(4, bmInterest);
        set(5, createdAt);
        set(6, updatedAt);
    }
}
