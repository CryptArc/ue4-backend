/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.MapmodeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4Mapmode extends TableImpl<MapmodeRecord> {

    private static final long serialVersionUID = -529583483;

    /**
     * The reference instance of <code>tue4_mapmode</code>
     */
    public static final Tue4Mapmode MAPMODE = new Tue4Mapmode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MapmodeRecord> getRecordType() {
        return MapmodeRecord.class;
    }

    /**
     * The column <code>tue4_mapmode.mam_gam_id</code>.
     */
    public final TableField<MapmodeRecord, String> MAM_GAM_ID = createField("mam_gam_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_mapmode.mam_map_id</code>.
     */
    public final TableField<MapmodeRecord, String> MAM_MAP_ID = createField("mam_map_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_mapmode.mam_enabled</code>.
     */
    public final TableField<MapmodeRecord, Boolean> MAM_ENABLED = createField("mam_enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false)
        .defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>tue4_mapmode.mam_ai_enabled</code>.
     */
    public final TableField<MapmodeRecord, Boolean> MAM_AI_ENABLED = createField("mam_ai_enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false)
        .defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>tue4_mapmode.mam_srv_id</code>.
     */
    public final TableField<MapmodeRecord, String> MAM_SRV_ID = createField("mam_srv_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_mapmode.mam_id</code>.
     */
    public final TableField<MapmodeRecord, String> MAM_ID = createField("mam_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_mapmode.mam_match_time</code>.
     */
    public final TableField<MapmodeRecord, Long> MAM_MATCH_TIME = createField("mam_match_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>tue4_mapmode</code> table reference
     */
    public Tue4Mapmode() {
        this(DSL.name("tue4_mapmode"), null);
    }

    /**
     * Create an aliased <code>tue4_mapmode</code> table reference
     */
    public Tue4Mapmode(String alias) {
        this(DSL.name(alias), MAPMODE);
    }

    /**
     * Create an aliased <code>tue4_mapmode</code> table reference
     */
    public Tue4Mapmode(Name alias) {
        this(alias, MAPMODE);
    }

    private Tue4Mapmode(Name alias, Table<MapmodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4Mapmode(Name alias, Table<MapmodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_16714_Kue4_MAM_SRV_FK_IDX, Indexes.IDX_16714_Kue4_MAP_GAM_FK, Indexes.MAPMODE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MapmodeRecord> getPrimaryKey() {
        return Keys.MAPMODE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MapmodeRecord>> getKeys() {
        return Arrays.<UniqueKey<MapmodeRecord>>asList(Keys.MAPMODE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MapmodeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MapmodeRecord, ?>>asList(Keys.MAPMODE__Tue4_MAPMODE_MAM_GAM_ID_FKEY, Keys.MAPMODE__Tue4_MAPMODE_MAM_MAP_ID_FKEY,
            Keys.MAPMODE__Tue4_MAPMODE_MAM_SRV_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4Mapmode as(String alias) {
        return new Tue4Mapmode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4Mapmode as(Name alias) {
        return new Tue4Mapmode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4Mapmode rename(String name) {
        return new Tue4Mapmode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4Mapmode rename(Name name) {
        return new Tue4Mapmode(name, null);
    }
}
