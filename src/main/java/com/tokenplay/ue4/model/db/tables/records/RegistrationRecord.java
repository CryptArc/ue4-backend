/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import com.tokenplay.ue4.model.db.tables.Tue4Registration;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class RegistrationRecord extends UpdatableRecordImpl<RegistrationRecord> implements Record4<String, String, OffsetDateTime, Long> {

    private static final long serialVersionUID = 556148601;

    /**
     * Setter for <code>tue4_registration.reg_pil_id</code>.
     */
    public void setRegPilId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tue4_registration.reg_pil_id</code>.
     */
    @NotNull
    public String getRegPilId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tue4_registration.reg_cha_id</code>.
     */
    public void setRegChaId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tue4_registration.reg_cha_id</code>.
     */
    @NotNull
    public String getRegChaId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tue4_registration.reg_date_registered</code>.
     */
    public void setRegDateRegistered(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>tue4_registration.reg_date_registered</code>.
     */
    @NotNull
    public OffsetDateTime getRegDateRegistered() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>tue4_registration.reg_score</code>.
     */
    public void setRegScore(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>tue4_registration.reg_score</code>.
     */
    public Long getRegScore() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, OffsetDateTime, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, OffsetDateTime, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tue4Registration.REGISTRATION.REG_PIL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tue4Registration.REGISTRATION.REG_CHA_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field3() {
        return Tue4Registration.REGISTRATION.REG_DATE_REGISTERED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Tue4Registration.REGISTRATION.REG_SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getRegPilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRegChaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component3() {
        return getRegDateRegistered();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getRegScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRegPilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRegChaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value3() {
        return getRegDateRegistered();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getRegScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationRecord value1(String value) {
        setRegPilId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationRecord value2(String value) {
        setRegChaId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationRecord value3(OffsetDateTime value) {
        setRegDateRegistered(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationRecord value4(Long value) {
        setRegScore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationRecord values(String value1, String value2, OffsetDateTime value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RegistrationRecord
     */
    public RegistrationRecord() {
        super(Tue4Registration.REGISTRATION);
    }

    /**
     * Create a detached, initialised RegistrationRecord
     */
    public RegistrationRecord(String pilId, String chaId, OffsetDateTime dateRegistered, Long score) {
        super(Tue4Registration.REGISTRATION);

        set(0, pilId);
        set(1, chaId);
        set(2, dateRegistered);
        set(3, score);
    }
}
