/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.MatchEventRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4MatchEvent extends TableImpl<MatchEventRecord> {

    private static final long serialVersionUID = -2027866730;

    /**
     * The reference instance of <code>tue4_match_event</code>
     */
    public static final Tue4MatchEvent MATCH_EVENT = new Tue4MatchEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MatchEventRecord> getRecordType() {
        return MatchEventRecord.class;
    }

    /**
     * The column <code>tue4_match_event.mev_id</code>.
     */
    public final TableField<MatchEventRecord, String> MEV_ID = createField("mev_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_match_event.mev_gei_id_target</code>.
     */
    public final TableField<MatchEventRecord, String> MEV_GEI_ID_TARGET = createField("mev_gei_id_target", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_match_event.mev_gei_id_source</code>.
     */
    public final TableField<MatchEventRecord, String> MEV_GEI_ID_SOURCE = createField("mev_gei_id_source", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_match_event.mev_type</code>.
     */
    public final TableField<MatchEventRecord, String> MEV_TYPE = createField("mev_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_match_event.mev_value</code>.
     */
    public final TableField<MatchEventRecord, Long> MEV_VALUE = createField("mev_value", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>tue4_match_event.mev_par_id_source</code>.
     */
    public final TableField<MatchEventRecord, String> MEV_PAR_ID_SOURCE = createField("mev_par_id_source", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_match_event.mev_par_id_target</code>.
     */
    public final TableField<MatchEventRecord, String> MEV_PAR_ID_TARGET = createField("mev_par_id_target", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_match_event.mev_txt_value</code>.
     */
    public final TableField<MatchEventRecord, String> MEV_TXT_VALUE = createField("mev_txt_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_match_event.mev_date</code>.
     */
    public final TableField<MatchEventRecord, OffsetDateTime> MEV_DATE = createField("mev_date", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE
        .nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>tue4_match_event</code> table reference
     */
    public Tue4MatchEvent() {
        this(DSL.name("tue4_match_event"), null);
    }

    /**
     * Create an aliased <code>tue4_match_event</code> table reference
     */
    public Tue4MatchEvent(String alias) {
        this(DSL.name(alias), MATCH_EVENT);
    }

    /**
     * Create an aliased <code>tue4_match_event</code> table reference
     */
    public Tue4MatchEvent(Name alias) {
        this(alias, MATCH_EVENT);
    }

    private Tue4MatchEvent(Name alias, Table<MatchEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4MatchEvent(Name alias, Table<MatchEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_16731_Iue4_MEV_TYPE, Indexes.IDX_16731_Kue4_GEI_MEV_SOURCE_FK,
            Indexes.IDX_16731_Kue4_GEI_MEV_TARGET_FK, Indexes.IDX_16731_Kue4_PAR_MEV_SOURCE_FK, Indexes.IDX_16731_Kue4_PAR_MEV_TARGET_FK,
            Indexes.MATCH_EVENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MatchEventRecord> getPrimaryKey() {
        return Keys.MATCH_EVENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MatchEventRecord>> getKeys() {
        return Arrays.<UniqueKey<MatchEventRecord>>asList(Keys.MATCH_EVENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MatchEventRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MatchEventRecord, ?>>asList(Keys.MATCH_EVENT__Tue4_MATCH_EVENT_MEV_GEI_ID_TARGET_FKEY,
            Keys.MATCH_EVENT__Tue4_MATCH_EVENT_MEV_GEI_ID_SOURCE_FKEY, Keys.MATCH_EVENT__Tue4_MATCH_EVENT_MEV_PAR_ID_SOURCE_FKEY,
            Keys.MATCH_EVENT__Tue4_MATCH_EVENT_MEV_PAR_ID_TARGET_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4MatchEvent as(String alias) {
        return new Tue4MatchEvent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4MatchEvent as(Name alias) {
        return new Tue4MatchEvent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4MatchEvent rename(String name) {
        return new Tue4MatchEvent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4MatchEvent rename(Name name) {
        return new Tue4MatchEvent(name, null);
    }
}
