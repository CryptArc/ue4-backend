/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import com.tokenplay.ue4.model.db.tables.Tue4Mapcycle;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class MapcycleRecord extends UpdatableRecordImpl<MapcycleRecord> implements
    Record11<String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1044255664;

    /**
     * Setter for <code>tue4_mapcycle.map_id</code>.
     */
    public void setMapId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_id</code>.
     */
    @NotNull
    public String getMapId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_srv_id</code>.
     */
    public void setMapSrvId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_srv_id</code>.
     */
    public String getMapSrvId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_alias</code>.
     */
    public void setMapAlias(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_alias</code>.
     */
    public String getMapAlias() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_mode</code>.
     */
    public void setMapMode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_mode</code>.
     */
    public String getMapMode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_time_of_day</code>.
     */
    public void setMapTimeOfDay(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_time_of_day</code>.
     */
    public Integer getMapTimeOfDay() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_weather</code>.
     */
    public void setMapWeather(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_weather</code>.
     */
    public Integer getMapWeather() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_time_limit</code>.
     */
    public void setMapTimeLimit(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_time_limit</code>.
     */
    public Integer getMapTimeLimit() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_max_bot_count</code>.
     */
    public void setMapMaxBotCount(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_max_bot_count</code>.
     */
    public Integer getMapMaxBotCount() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_max_bot_skill_level</code>.
     */
    public void setMapMaxBotSkillLevel(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_max_bot_skill_level</code>.
     */
    public Integer getMapMaxBotSkillLevel() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_min_bot_skill_level</code>.
     */
    public void setMapMinBotSkillLevel(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_min_bot_skill_level</code>.
     */
    public Integer getMapMinBotSkillLevel() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>tue4_mapcycle.map_match_score_limit</code>.
     */
    public void setMapMatchScoreLimit(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>tue4_mapcycle.map_match_score_limit</code>.
     */
    public Integer getMapMatchScoreLimit() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tue4Mapcycle.MAPCYCLE.MAP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tue4Mapcycle.MAPCYCLE.MAP_SRV_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Tue4Mapcycle.MAPCYCLE.MAP_ALIAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Tue4Mapcycle.MAPCYCLE.MAP_MODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Tue4Mapcycle.MAPCYCLE.MAP_TIME_OF_DAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Tue4Mapcycle.MAPCYCLE.MAP_WEATHER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Tue4Mapcycle.MAPCYCLE.MAP_TIME_LIMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Tue4Mapcycle.MAPCYCLE.MAP_MAX_BOT_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Tue4Mapcycle.MAPCYCLE.MAP_MAX_BOT_SKILL_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Tue4Mapcycle.MAPCYCLE.MAP_MIN_BOT_SKILL_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Tue4Mapcycle.MAPCYCLE.MAP_MATCH_SCORE_LIMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getMapSrvId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getMapAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMapMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getMapTimeOfDay();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getMapWeather();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getMapTimeLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getMapMaxBotCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getMapMaxBotSkillLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getMapMinBotSkillLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getMapMatchScoreLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getMapSrvId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getMapAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMapMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getMapTimeOfDay();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getMapWeather();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getMapTimeLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getMapMaxBotCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getMapMaxBotSkillLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getMapMinBotSkillLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getMapMatchScoreLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value1(String value) {
        setMapId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value2(String value) {
        setMapSrvId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value3(String value) {
        setMapAlias(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value4(String value) {
        setMapMode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value5(Integer value) {
        setMapTimeOfDay(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value6(Integer value) {
        setMapWeather(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value7(Integer value) {
        setMapTimeLimit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value8(Integer value) {
        setMapMaxBotCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value9(Integer value) {
        setMapMaxBotSkillLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value10(Integer value) {
        setMapMinBotSkillLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord value11(Integer value) {
        setMapMatchScoreLimit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapcycleRecord values(String value1, String value2, String value3, String value4, Integer value5, Integer value6, Integer value7,
        Integer value8, Integer value9, Integer value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MapcycleRecord
     */
    public MapcycleRecord() {
        super(Tue4Mapcycle.MAPCYCLE);
    }

    /**
     * Create a detached, initialised MapcycleRecord
     */
    public MapcycleRecord(String id, String srvId, String alias, String mode, Integer timeOfDay, Integer weather, Integer timeLimit,
        Integer maxBotCount, Integer maxBotSkillLevel, Integer minBotSkillLevel, Integer matchScoreLimit) {
        super(Tue4Mapcycle.MAPCYCLE);

        set(0, id);
        set(1, srvId);
        set(2, alias);
        set(3, mode);
        set(4, timeOfDay);
        set(5, weather);
        set(6, timeLimit);
        set(7, maxBotCount);
        set(8, maxBotSkillLevel);
        set(9, minBotSkillLevel);
        set(10, matchScoreLimit);
    }
}
