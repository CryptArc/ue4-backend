/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.ScoreConfigRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4ScoreConfig extends TableImpl<ScoreConfigRecord> {

    private static final long serialVersionUID = -1801971629;

    /**
     * The reference instance of <code>tue4_score_config</code>
     */
    public static final Tue4ScoreConfig SCORE_CONFIG = new Tue4ScoreConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScoreConfigRecord> getRecordType() {
        return ScoreConfigRecord.class;
    }

    /**
     * The column <code>tue4_score_config.sco_id</code>.
     */
    public final TableField<ScoreConfigRecord, String> SCO_ID = createField("sco_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_score_config.sco_name</code>.
     */
    public final TableField<ScoreConfigRecord, String> SCO_NAME = createField("sco_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_score_config.sco_minimum_factor</code>.
     */
    public final TableField<ScoreConfigRecord, BigDecimal> SCO_MINIMUM_FACTOR = createField("sco_minimum_factor",
        org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>tue4_score_config.sco_maximum_factor</code>.
     */
    public final TableField<ScoreConfigRecord, BigDecimal> SCO_MAXIMUM_FACTOR = createField("sco_maximum_factor",
        org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>tue4_score_config.sco_neutral_matches</code>.
     */
    public final TableField<ScoreConfigRecord, BigDecimal> SCO_NEUTRAL_MATCHES = createField("sco_neutral_matches",
        org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>tue4_score_config.sco_months_to_consider</code>.
     */
    public final TableField<ScoreConfigRecord, BigDecimal> SCO_MONTHS_TO_CONSIDER = createField("sco_months_to_consider",
        org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>tue4_score_config</code> table reference
     */
    public Tue4ScoreConfig() {
        this(DSL.name("tue4_score_config"), null);
    }

    /**
     * Create an aliased <code>tue4_score_config</code> table reference
     */
    public Tue4ScoreConfig(String alias) {
        this(DSL.name(alias), SCORE_CONFIG);
    }

    /**
     * Create an aliased <code>tue4_score_config</code> table reference
     */
    public Tue4ScoreConfig(Name alias) {
        this(alias, SCORE_CONFIG);
    }

    private Tue4ScoreConfig(Name alias, Table<ScoreConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4ScoreConfig(Name alias, Table<ScoreConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SCORE_CONFIG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScoreConfigRecord> getPrimaryKey() {
        return Keys.SCORE_CONFIG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScoreConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<ScoreConfigRecord>>asList(Keys.SCORE_CONFIG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4ScoreConfig as(String alias) {
        return new Tue4ScoreConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4ScoreConfig as(Name alias) {
        return new Tue4ScoreConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4ScoreConfig rename(String name) {
        return new Tue4ScoreConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4ScoreConfig rename(Name name) {
        return new Tue4ScoreConfig(name, null);
    }
}
