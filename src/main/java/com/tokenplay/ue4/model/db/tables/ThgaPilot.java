/*
 * This file is generated by jOOQ.
 */
package com.tokenplay.ue4.model.db.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import com.tokenplay.ue4.model.db.DefaultSchema;
import com.tokenplay.ue4.model.db.Indexes;
import com.tokenplay.ue4.model.db.Keys;
import com.tokenplay.ue4.model.db.tables.records.PilotRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {
    "http://www.jooq.org", "jOOQ version:3.10.6"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({
    "all", "unchecked", "rawtypes"})
public class Tue4Pilot extends TableImpl<PilotRecord> {

    private static final long serialVersionUID = 792152819;

    /**
     * The reference instance of <code>tue4_pilot</code>
     */
    public static final Tue4Pilot PILOT = new Tue4Pilot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PilotRecord> getRecordType() {
        return PilotRecord.class;
    }

    /**
     * The column <code>tue4_pilot.pil_id</code>.
     */
    public final TableField<PilotRecord, String> PIL_ID = createField("pil_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_pilot.pil_callsign</code>.
     */
    public final TableField<PilotRecord, String> PIL_CALLSIGN = createField("pil_callsign", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>tue4_pilot.pil_usu_id</code>.
     */
    public final TableField<PilotRecord, Long> PIL_USU_ID = createField("pil_usu_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>tue4_pilot.pil_srv_id</code>.
     */
    public final TableField<PilotRecord, String> PIL_SRV_ID = createField("pil_srv_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_token</code>.
     */
    public final TableField<PilotRecord, String> PIL_TOKEN = createField("pil_token", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_last_ping</code>.
     */
    public final TableField<PilotRecord, OffsetDateTime> PIL_LAST_PING = createField("pil_last_ping",
        org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>tue4_pilot.pil_last_ip</code>.
     */
    public final TableField<PilotRecord, String> PIL_LAST_IP = createField("pil_last_ip", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_last_version</code>.
     */
    public final TableField<PilotRecord, String> PIL_LAST_VERSION = createField("pil_last_version", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_last_login</code>.
     */
    public final TableField<PilotRecord, OffsetDateTime> PIL_LAST_LOGIN = createField("pil_last_login",
        org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>tue4_pilot.pil_disable_chat</code>.
     */
    public final TableField<PilotRecord, Boolean> PIL_DISABLE_CHAT = createField("pil_disable_chat", org.jooq.impl.SQLDataType.BOOLEAN
        .nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>tue4_pilot.pil_rmbr_token</code>.
     */
    public final TableField<PilotRecord, String> PIL_RMBR_TOKEN = createField("pil_rmbr_token", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_uth_id</code>.
     */
    public final TableField<PilotRecord, String> PIL_UTH_ID = createField("pil_uth_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_disable_requests</code>.
     */
    public final TableField<PilotRecord, Boolean> PIL_DISABLE_REQUESTS = createField("pil_disable_requests", org.jooq.impl.SQLDataType.BOOLEAN
        .nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>tue4_pilot.pil_leave_reason</code>.
     */
    public final TableField<PilotRecord, String> PIL_LEAVE_REASON = createField("pil_leave_reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_leave_date</code>.
     */
    public final TableField<PilotRecord, OffsetDateTime> PIL_LEAVE_DATE = createField("pil_leave_date",
        org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>tue4_pilot.pil_off_limits</code>.
     */
    public final TableField<PilotRecord, Boolean> PIL_OFF_LIMITS = createField("pil_off_limits", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false)
        .defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>tue4_pilot.pil_default_scheme</code>.
     */
    public final TableField<PilotRecord, String> PIL_DEFAULT_SCHEME = createField("pil_default_scheme", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>tue4_pilot.pil_use_custom_scheme</code>.
     */
    public final TableField<PilotRecord, Boolean> PIL_USE_CUSTOM_SCHEME = createField("pil_use_custom_scheme", org.jooq.impl.SQLDataType.BOOLEAN
        .nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>tue4_pilot</code> table reference
     */
    public Tue4Pilot() {
        this(DSL.name("tue4_pilot"), null);
    }

    /**
     * Create an aliased <code>tue4_pilot</code> table reference
     */
    public Tue4Pilot(String alias) {
        this(DSL.name(alias), PILOT);
    }

    /**
     * Create an aliased <code>tue4_pilot</code> table reference
     */
    public Tue4Pilot(Name alias) {
        this(alias, PILOT);
    }

    private Tue4Pilot(Name alias, Table<PilotRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tue4Pilot(Name alias, Table<PilotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_16752_Kue4_PIL_SRV_FK, Indexes.IDX_16752_Kue4_PIL_UTH_ID, Indexes.PILOT_PIL_USU_ID_KEY,
            Indexes.PILOT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PilotRecord> getPrimaryKey() {
        return Keys.PILOT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PilotRecord>> getKeys() {
        return Arrays.<UniqueKey<PilotRecord>>asList(Keys.PILOT_PKEY, Keys.PILOT_PIL_USU_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PilotRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PilotRecord, ?>>asList(Keys.PILOT__Tue4_PILOT_PIL_SRV_ID_FKEY, Keys.PILOT__Tue4_PILOT_PIL_UTH_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4Pilot as(String alias) {
        return new Tue4Pilot(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tue4Pilot as(Name alias) {
        return new Tue4Pilot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4Pilot rename(String name) {
        return new Tue4Pilot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tue4Pilot rename(Name name) {
        return new Tue4Pilot(name, null);
    }
}
